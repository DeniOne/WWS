// üë§ –¢–∏–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–æ–ª–µ–π
// Without Words Stroke - User Types

// üë§ –¢–∏–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (5 —Ä–æ–ª–µ–π)
export type UserRole = 'patient' | 'family' | 'doctor' | 'volunteer' | 'partner' | 'admin';

// üé® –¶–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã –¥–ª—è —Ä–æ–ª–µ–π
export const ROLE_COLORS: Record<UserRole, string> = {
  patient: '#4A90E2',    // –°–∏–Ω–∏–π - —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ
  family: '#7ED321',     // –ó–µ–ª–µ–Ω—ã–π - –ø–æ–¥–¥–µ—Ä–∂–∫–∞
  doctor: '#6C757D',     // –°–µ—Ä—ã–π - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º
  volunteer: '#FFD93D',  // –ñ–µ–ª—Ç—ã–π - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  partner: '#FF6B6B',    // –ö—Ä–∞—Å–Ω—ã–π - –≤–∞–∂–Ω–æ—Å—Ç—å
  admin: '#212529'       // –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
};

// üë§ –ë–∞–∑–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
export interface User {
  id: string;
  email: string;
  name: string;
  role: UserRole;
  language: string;
  theme: 'light' | 'dark';
  avatar?: string;
  createdAt: Date;
  updatedAt: Date;
  isActive: boolean;
}

// üè• –ü–∞—Ü–∏–µ–Ω—Ç (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ User)
export interface Patient extends User {
  role: 'patient';
  dateOfBirth: Date;
  strokeDate?: Date;
  medicalHistory: string[];
  emergencyContacts: EmergencyContact[];
  currentMedications: Medication[];
  rehabilitationPlan?: RehabilitationPlan;
}

// üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º—å—è (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ User)
export interface Family extends User {
  role: 'family';
  relatedPatients: string[]; // ID –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
  relationship: 'spouse' | 'parent' | 'child' | 'sibling' | 'other';
}

// üë®‚Äç‚öïÔ∏è –í—Ä–∞—á (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ User)
export interface Doctor extends User {
  role: 'doctor';
  specialization: string;
  licenseNumber: string;
  patients: string[]; // ID –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
  hospital: string;
  experience: number; // –ª–µ—Ç –æ–ø—ã—Ç–∞
}

// ü§ù –í–æ–ª–æ–Ω—Ç–µ—Ä (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ User)
export interface Volunteer extends User {
  role: 'volunteer';
  skills: string[];
  availability: Availability[];
  assignedPatients: string[]; // ID –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
  rating: number;
}

// ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ User)
export interface Partner extends User {
  role: 'partner';
  companyName: string;
  services: string[];
  products: string[];
  partnershipType: 'medical' | 'rehabilitation' | 'equipment' | 'other';
}

// üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
export interface EmergencyContact {
  id: string;
  name: string;
  phone: string;
  relationship: string;
  isPrimary: boolean;
}

// üíä –õ–µ–∫–∞—Ä—Å—Ç–≤–∞
export interface Medication {
  id: string;
  name: string;
  dosage: string;
  frequency: string;
  startDate: Date;
  endDate?: Date;
  notes?: string;
}

// üè• –ü–ª–∞–Ω —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏
export interface RehabilitationPlan {
  id: string;
  patientId: string;
  doctorId: string;
  goals: string[];
  exercises: Exercise[];
  schedule: Schedule[];
  progress: Progress[];
  createdAt: Date;
  updatedAt: Date;
}

// üèÉ‚Äç‚ôÇÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
export interface Exercise {
  id: string;
  name: string;
  description: string;
  category: 'physical' | 'cognitive' | 'speech' | 'emotional';
  difficulty: 'easy' | 'medium' | 'hard';
  duration: number; // –º–∏–Ω—É—Ç—ã
  instructions: string[];
  videoUrl?: string;
}

// üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
export interface Schedule {
  id: string;
  exerciseId: string;
  dayOfWeek: number; // 0-6 (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ-—Å—É–±–±–æ—Ç–∞)
  time: string; // HH:MM
  duration: number; // –º–∏–Ω—É—Ç—ã
  isCompleted: boolean;
}

// üìä –ü—Ä–æ–≥—Ä–µ—Å—Å
export interface Progress {
  id: string;
  exerciseId: string;
  completedAt: Date;
  duration: number; // —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
  notes?: string;
  rating?: number; // 1-5
}

// üéØ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
export interface Availability {
  dayOfWeek: number; // 0-6
  startTime: string; // HH:MM
  endTime: string; // HH:MM
  isAvailable: boolean;
}
