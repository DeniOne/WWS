'use client';

import React, { useState } from 'react';
import { Button } from '../ui';
import { UserRole } from '../../types/user';

interface HeaderProps {
  userRole?: UserRole;
  onMenuToggle?: () => void;
  onThemeToggle?: () => void;
  isDarkMode?: boolean;
}

/**
 * üéØ –®–∞–ø–∫–∞ —Å–∞–π—Ç–∞ –¥–ª—è WWS
 * –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –ª—é–¥–µ–π —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏ –º–æ—Ç–æ—Ä–∏–∫–∏
 */
export const Header: React.FC<HeaderProps> = ({
  userRole,
  onMenuToggle,
  onThemeToggle,
  isDarkMode = false,
}) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const handleMenuToggle = () => {
    setIsMenuOpen(!isMenuOpen);
    onMenuToggle?.();
  };

  const handleThemeToggle = () => {
    onThemeToggle?.();
  };

  return (
    <header className="bg-white dark:bg-gray-900 shadow-lg border-b border-gray-200 dark:border-gray-700">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
          <div className="flex items-center space-x-3">
            <button
              onClick={handleMenuToggle}
              className="md:hidden p-2 rounded-lg text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800"
              aria-label="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"
            >
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
            
            <div className="flex items-center space-x-2">
              <div className="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-xl">WWS</span>
              </div>
              <div className="hidden sm:block">
                <h1 className="text-xl font-bold text-gray-900 dark:text-white">
                  Without Words Stroke
                </h1>
                <p className="text-sm text-gray-600 dark:text-gray-400">
                  We Will Survive
                </p>
              </div>
            </div>
          </div>

          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
          <nav className="hidden md:flex items-center space-x-6">
            <a
              href="/"
              className="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 font-medium transition-colors"
            >
              –ì–ª–∞–≤–Ω–∞—è
            </a>
            <a
              href="/academy"
              className="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 font-medium transition-colors"
            >
              –ê–∫–∞–¥–µ–º–∏—è
            </a>
            <a
              href="/stories"
              className="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 font-medium transition-colors"
            >
              –ò—Å—Ç–æ—Ä–∏–∏
            </a>
            <a
              href="/clinics"
              className="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 font-medium transition-colors"
            >
              –ö–ª–∏–Ω–∏–∫–∏
            </a>
            <a
              href="/support"
              className="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 font-medium transition-colors"
            >
              –ü–æ–¥–¥–µ—Ä–∂–∫–∞
            </a>
          </nav>

          {/* –î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <div className="flex items-center space-x-3">
            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã */}
            <button
              onClick={handleThemeToggle}
              className="p-2 rounded-lg text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
              aria-label={isDarkMode ? '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞' : '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞'}
            >
              {isDarkMode ? (
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                </svg>
              ) : (
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                </svg>
              )}
            </button>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            {userRole ? (
              <div className="flex items-center space-x-2">
                <Button variant="secondary" size="sm">
                  –ü—Ä–æ—Ñ–∏–ª—å
                </Button>
                <Button variant="ghost" size="sm">
                  –í—ã–π—Ç–∏
                </Button>
              </div>
            ) : (
              <div className="flex items-center space-x-2">
                <Button variant="ghost" size="sm">
                  –í–æ–π—Ç–∏
                </Button>
                <Button variant="primary" size="sm">
                  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                </Button>
              </div>
            )}
          </div>
        </div>

        {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
        {isMenuOpen && (
          <div className="md:hidden border-t border-gray-200 dark:border-gray-700 py-4">
            <nav className="flex flex-col space-y-2">
              <a
                href="/"
                className="px-3 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
              >
                –ì–ª–∞–≤–Ω–∞—è
              </a>
              <a
                href="/academy"
                className="px-3 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
              >
                –ê–∫–∞–¥–µ–º–∏—è
              </a>
              <a
                href="/stories"
                className="px-3 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
              >
                –ò—Å—Ç–æ—Ä–∏–∏
              </a>
              <a
                href="/clinics"
                className="px-3 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
              >
                –ö–ª–∏–Ω–∏–∫–∏
              </a>
              <a
                href="/support"
                className="px-3 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
              >
                –ü–æ–¥–¥–µ—Ä–∂–∫–∞
              </a>
            </nav>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;
